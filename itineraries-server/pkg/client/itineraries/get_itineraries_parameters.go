/*

MIT License

Copyright (c) 2019 Amadeus s.a.s.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/
// Code generated by go-swagger; DO NOT EDIT.

package itineraries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetItinerariesParams creates a new GetItinerariesParams object
// with the default values initialized.
func NewGetItinerariesParams() *GetItinerariesParams {
	var ()
	return &GetItinerariesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetItinerariesParamsWithTimeout creates a new GetItinerariesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetItinerariesParamsWithTimeout(timeout time.Duration) *GetItinerariesParams {
	var ()
	return &GetItinerariesParams{

		timeout: timeout,
	}
}

// NewGetItinerariesParamsWithContext creates a new GetItinerariesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetItinerariesParamsWithContext(ctx context.Context) *GetItinerariesParams {
	var ()
	return &GetItinerariesParams{

		Context: ctx,
	}
}

// NewGetItinerariesParamsWithHTTPClient creates a new GetItinerariesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetItinerariesParamsWithHTTPClient(client *http.Client) *GetItinerariesParams {
	var ()
	return &GetItinerariesParams{
		HTTPClient: client,
	}
}

/*GetItinerariesParams contains all the parameters to send to the API endpoint
for the get itineraries operation typically these are written to a http.Request
*/
type GetItinerariesParams struct {

	/*From*/
	From *string
	/*To*/
	To *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get itineraries params
func (o *GetItinerariesParams) WithTimeout(timeout time.Duration) *GetItinerariesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get itineraries params
func (o *GetItinerariesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get itineraries params
func (o *GetItinerariesParams) WithContext(ctx context.Context) *GetItinerariesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get itineraries params
func (o *GetItinerariesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get itineraries params
func (o *GetItinerariesParams) WithHTTPClient(client *http.Client) *GetItinerariesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get itineraries params
func (o *GetItinerariesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFrom adds the from to the get itineraries params
func (o *GetItinerariesParams) WithFrom(from *string) *GetItinerariesParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get itineraries params
func (o *GetItinerariesParams) SetFrom(from *string) {
	o.From = from
}

// WithTo adds the to to the get itineraries params
func (o *GetItinerariesParams) WithTo(to *string) *GetItinerariesParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the get itineraries params
func (o *GetItinerariesParams) SetTo(to *string) {
	o.To = to
}

// WriteToRequest writes these params to a swagger request
func (o *GetItinerariesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.From != nil {

		// query param from
		var qrFrom string
		if o.From != nil {
			qrFrom = *o.From
		}
		qFrom := qrFrom
		if qFrom != "" {
			if err := r.SetQueryParam("from", qFrom); err != nil {
				return err
			}
		}

	}

	if o.To != nil {

		// query param to
		var qrTo string
		if o.To != nil {
			qrTo = *o.To
		}
		qTo := qrTo
		if qTo != "" {
			if err := r.SetQueryParam("to", qTo); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
