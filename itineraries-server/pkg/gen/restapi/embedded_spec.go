// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "needs to add a description",
    "title": "An Itineraries server application",
    "version": "1.0.0"
  },
  "paths": {
    "/itineraries": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "itineraries"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "from",
            "in": "query"
          },
          {
            "type": "string",
            "name": "to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "departureDate",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1200",
            "name": "departureTime",
            "in": "query"
          },
          {
            "type": "string",
            "name": "returnDate",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1200",
            "name": "returnTime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list of itineraries",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/itinerary"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "../../storage/swagger/swagger.yaml#/definitions/error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "../../storage/swagger/swagger.yaml#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "../../storage/swagger/swagger.yaml#/definitions/error"
            }
          }
        }
      }
    },
    "/live": {
      "get": {
        "tags": [
          "liveness"
        ],
        "responses": {
          "200": {
            "description": "liveness probe"
          },
          "503": {
            "description": "if not alive",
            "schema": {
              "$ref": "../../storage/swagger/swagger.yaml#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "../../storage/swagger/swagger.yaml#/definitions/error"
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "tags": [
          "readiness"
        ],
        "responses": {
          "200": {
            "description": "readiness probe"
          },
          "503": {
            "description": "if not ready",
            "schema": {
              "$ref": "../../storage/swagger/swagger.yaml#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "../../storage/swagger/swagger.yaml#/definitions/error"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "version"
        ],
        "responses": {
          "200": {
            "description": "version",
            "schema": {
              "$ref": "../../storage/swagger/swagger.yaml#/definitions/version"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "itinerary": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "ItineraryID": {
          "type": "string"
        },
        "Segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/segment"
          },
          "readOnly": true
        }
      }
    },
    "segment": {
      "type": "object",
      "properties": {
        "ArrivalDate": {
          "type": "string"
        },
        "ArrivalTime": {
          "type": "string"
        },
        "DepartureDate": {
          "type": "string"
        },
        "DepartureTime": {
          "type": "string"
        },
        "Destination": {
          "type": "string"
        },
        "FlightNumber": {
          "type": "string"
        },
        "OperatingCarrier": {
          "type": "string"
        },
        "Origin": {
          "type": "string"
        },
        "SegmentID": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "needs to add a description",
    "title": "An Itineraries server application",
    "version": "1.0.0"
  },
  "paths": {
    "/itineraries": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "itineraries"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "from",
            "in": "query"
          },
          {
            "type": "string",
            "name": "to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "departureDate",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1200",
            "name": "departureTime",
            "in": "query"
          },
          {
            "type": "string",
            "name": "returnDate",
            "in": "query"
          },
          {
            "type": "string",
            "default": "1200",
            "name": "returnTime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list of itineraries",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/itinerary"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/live": {
      "get": {
        "tags": [
          "liveness"
        ],
        "responses": {
          "200": {
            "description": "liveness probe"
          },
          "503": {
            "description": "if not alive",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "tags": [
          "readiness"
        ],
        "responses": {
          "200": {
            "description": "readiness probe"
          },
          "503": {
            "description": "if not ready",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "version"
        ],
        "responses": {
          "200": {
            "description": "version",
            "schema": {
              "$ref": "#/definitions/version"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "itinerary": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "ItineraryID": {
          "type": "string"
        },
        "Segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/segment"
          },
          "readOnly": true
        }
      }
    },
    "segment": {
      "type": "object",
      "properties": {
        "ArrivalDate": {
          "type": "string"
        },
        "ArrivalTime": {
          "type": "string"
        },
        "DepartureDate": {
          "type": "string"
        },
        "DepartureTime": {
          "type": "string"
        },
        "Destination": {
          "type": "string"
        },
        "FlightNumber": {
          "type": "string"
        },
        "OperatingCarrier": {
          "type": "string"
        },
        "Origin": {
          "type": "string"
        },
        "SegmentID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "version": {
      "type": "object",
      "properties": {
        "Version": {
          "type": "string"
        }
      }
    }
  }
}`))
}
