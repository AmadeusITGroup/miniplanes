// Code generated by go-swagger; DO NOT EDIT.

package itineraries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/amadeusitgroup/miniplanes/itineraries-server/pkg/gen/models"
)

// GetItinerariesOKCode is the HTTP code returned for type GetItinerariesOK
const GetItinerariesOKCode int = 200

/*GetItinerariesOK list of itineraries

swagger:response getItinerariesOK
*/
type GetItinerariesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Itinerary `json:"body,omitempty"`
}

// NewGetItinerariesOK creates GetItinerariesOK with default headers values
func NewGetItinerariesOK() *GetItinerariesOK {

	return &GetItinerariesOK{}
}

// WithPayload adds the payload to the get itineraries o k response
func (o *GetItinerariesOK) WithPayload(payload []*models.Itinerary) *GetItinerariesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get itineraries o k response
func (o *GetItinerariesOK) SetPayload(payload []*models.Itinerary) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItinerariesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Itinerary, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetItinerariesBadRequestCode is the HTTP code returned for type GetItinerariesBadRequest
const GetItinerariesBadRequestCode int = 400

/*GetItinerariesBadRequest generic error response

swagger:response getItinerariesBadRequest
*/
type GetItinerariesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItinerariesBadRequest creates GetItinerariesBadRequest with default headers values
func NewGetItinerariesBadRequest() *GetItinerariesBadRequest {

	return &GetItinerariesBadRequest{}
}

// WithPayload adds the payload to the get itineraries bad request response
func (o *GetItinerariesBadRequest) WithPayload(payload *models.Error) *GetItinerariesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get itineraries bad request response
func (o *GetItinerariesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItinerariesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetItinerariesNotFoundCode is the HTTP code returned for type GetItinerariesNotFound
const GetItinerariesNotFoundCode int = 404

/*GetItinerariesNotFound not found

swagger:response getItinerariesNotFound
*/
type GetItinerariesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItinerariesNotFound creates GetItinerariesNotFound with default headers values
func NewGetItinerariesNotFound() *GetItinerariesNotFound {

	return &GetItinerariesNotFound{}
}

// WithPayload adds the payload to the get itineraries not found response
func (o *GetItinerariesNotFound) WithPayload(payload *models.Error) *GetItinerariesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get itineraries not found response
func (o *GetItinerariesNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItinerariesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetItinerariesDefault generic error response

swagger:response getItinerariesDefault
*/
type GetItinerariesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetItinerariesDefault creates GetItinerariesDefault with default headers values
func NewGetItinerariesDefault(code int) *GetItinerariesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetItinerariesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get itineraries default response
func (o *GetItinerariesDefault) WithStatusCode(code int) *GetItinerariesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get itineraries default response
func (o *GetItinerariesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get itineraries default response
func (o *GetItinerariesDefault) WithPayload(payload *models.Error) *GetItinerariesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get itineraries default response
func (o *GetItinerariesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetItinerariesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
