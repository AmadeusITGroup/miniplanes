// Code generated by go-swagger; DO NOT EDIT.

package readiness

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/amadeusitgroup/miniplanes/itineraries-server/pkg/gen/models"
)

// GetReadyOKCode is the HTTP code returned for type GetReadyOK
const GetReadyOKCode int = 200

/*GetReadyOK readiness probe

swagger:response getReadyOK
*/
type GetReadyOK struct {
}

// NewGetReadyOK creates GetReadyOK with default headers values
func NewGetReadyOK() *GetReadyOK {

	return &GetReadyOK{}
}

// WriteResponse to the client
func (o *GetReadyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// GetReadyServiceUnavailableCode is the HTTP code returned for type GetReadyServiceUnavailable
const GetReadyServiceUnavailableCode int = 503

/*GetReadyServiceUnavailable if not ready

swagger:response getReadyServiceUnavailable
*/
type GetReadyServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetReadyServiceUnavailable creates GetReadyServiceUnavailable with default headers values
func NewGetReadyServiceUnavailable() *GetReadyServiceUnavailable {

	return &GetReadyServiceUnavailable{}
}

// WithPayload adds the payload to the get ready service unavailable response
func (o *GetReadyServiceUnavailable) WithPayload(payload *models.Error) *GetReadyServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ready service unavailable response
func (o *GetReadyServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReadyServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetReadyDefault generic error response

swagger:response getReadyDefault
*/
type GetReadyDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetReadyDefault creates GetReadyDefault with default headers values
func NewGetReadyDefault(code int) *GetReadyDefault {
	if code <= 0 {
		code = 500
	}

	return &GetReadyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get ready default response
func (o *GetReadyDefault) WithStatusCode(code int) *GetReadyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get ready default response
func (o *GetReadyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get ready default response
func (o *GetReadyDefault) WithPayload(payload *models.Error) *GetReadyDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ready default response
func (o *GetReadyDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReadyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
