// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/net.amadeus.miniapp.itineraries.v1+json"
  ],
  "produces": [
    "application/net.amadeus.miniapp.itineraries.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "needs to add a description",
    "title": "An Itineraries server application",
    "version": "1.0.0"
  },
  "paths": {
    "/airlines": {
      "get": {
        "tags": [
          "airlines"
        ],
        "responses": {
          "200": {
            "description": "list of airlines",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/airline"
              }
            }
          }
        }
      }
    },
    "/itineraries": {
      "get": {
        "tags": [
          "itineraries"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "from",
            "in": "query"
          },
          {
            "type": "string",
            "name": "to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list of itineraries",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/itinerary"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/live": {
      "get": {
        "tags": [
          "liveness"
        ],
        "responses": {
          "200": {
            "description": "liveness probe"
          },
          "503": {
            "description": "if not live",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "tags": [
          "readiness"
        ],
        "responses": {
          "200": {
            "description": "if ready"
          },
          "503": {
            "description": "if not ready",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "airline": {
      "type": "object",
      "properties": {
        "Active": {
          "type": "boolean"
        },
        "IATA": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "itinerary": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "distance": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/itineraryStep"
          },
          "readOnly": true
        }
      }
    },
    "itineraryStep": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/net.amadeus.miniapp.itineraries.v1+json"
  ],
  "produces": [
    "application/net.amadeus.miniapp.itineraries.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "needs to add a description",
    "title": "An Itineraries server application",
    "version": "1.0.0"
  },
  "paths": {
    "/airlines": {
      "get": {
        "tags": [
          "airlines"
        ],
        "responses": {
          "200": {
            "description": "list of airlines",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/airline"
              }
            }
          }
        }
      }
    },
    "/itineraries": {
      "get": {
        "tags": [
          "itineraries"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "from",
            "in": "query"
          },
          {
            "type": "string",
            "name": "to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list of itineraries",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/itinerary"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/live": {
      "get": {
        "tags": [
          "liveness"
        ],
        "responses": {
          "200": {
            "description": "liveness probe"
          },
          "503": {
            "description": "if not live",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "tags": [
          "readiness"
        ],
        "responses": {
          "200": {
            "description": "if ready"
          },
          "503": {
            "description": "if not ready",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "airline": {
      "type": "object",
      "properties": {
        "Active": {
          "type": "boolean"
        },
        "IATA": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "itinerary": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "distance": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/itineraryStep"
          },
          "readOnly": true
        }
      }
    },
    "itineraryStep": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    }
  }
}`))
}
