// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "needs to add a description",
    "title": "miniplanes storage",
    "version": "1.0.0"
  },
  "host": "storage:33775",
  "paths": {
    "/airlines": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "airlines"
        ],
        "responses": {
          "200": {
            "description": "list of airlines",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/airline"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new airline. Duplicates are not allowed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "airlines"
        ],
        "operationId": "addAirline",
        "parameters": [
          {
            "description": "Airline\"",
            "name": "airline\"",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/airline"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/airline"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/airports": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "airports"
        ],
        "responses": {
          "200": {
            "description": "list of airports",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/airport"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Creates an Airport entry. Duplicates are not allowed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "airports"
        ],
        "operationId": "addAirport",
        "parameters": [
          {
            "description": "Airport",
            "name": "airport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/airport"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/airport"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/live": {
      "get": {
        "tags": [
          "liveness"
        ],
        "responses": {
          "200": {
            "description": "liveness probe"
          },
          "503": {
            "description": "if not alive",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "tags": [
          "readiness"
        ],
        "responses": {
          "200": {
            "description": "readiness probe"
          },
          "503": {
            "description": "if not ready",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/schedules": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "schedules"
        ],
        "responses": {
          "200": {
            "description": "list of schedules",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/schedule"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new schedule. Duplicates are not allowed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "schedules"
        ],
        "operationId": "addSchedule",
        "parameters": [
          {
            "description": "Schedule",
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/schedules/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "schedules"
        ],
        "operationId": "getSchedule",
        "responses": {
          "200": {
            "description": "list of schedules",
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          }
        }
      },
      "put": {
        "description": "Updates an existant Schedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "schedules"
        ],
        "operationId": "updateSchedule",
        "parameters": [
          {
            "description": "the schedule to update",
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Updated Succesfully",
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          },
          "400": {
            "description": "invalid id"
          },
          "404": {
            "description": "schedule not found"
          }
        }
      },
      "delete": {
        "description": "Delete an existant schedules",
        "tags": [
          "schedules"
        ],
        "operationId": "deleteSchedule",
        "responses": {
          "204": {
            "description": "Deleted successfully"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Schedule not found"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/idPathParameter"
        }
      ]
    },
    "/version": {
      "get": {
        "tags": [
          "version"
        ],
        "responses": {
          "200": {
            "description": "version",
            "schema": {
              "$ref": "#/definitions/version"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "airline": {
      "type": "object",
      "properties": {
        "Active": {
          "type": "string"
        },
        "AirlineID": {
          "type": "integer"
        },
        "Alias": {
          "type": "string"
        },
        "Callsign": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "IATA": {
          "type": "string"
        },
        "ICAO": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "airport": {
      "type": "object",
      "properties": {
        "AirportID": {
          "type": "integer",
          "format": "int32"
        },
        "Altitude": {
          "type": "number"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "DST": {
          "type": "string"
        },
        "IATA": {
          "type": "string"
        },
        "ICAO": {
          "type": "string"
        },
        "Latitude": {
          "type": "number"
        },
        "Longitude": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "TZ": {
          "type": "string"
        },
        "timezone": {
          "type": "integer"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "schedule": {
      "type": "object",
      "required": [
        "ScheduleID",
        "Origin",
        "Destination",
        "FlightNumber",
        "OperatingCarrier",
        "DaysOperated",
        "DepartureTime"
      ],
      "properties": {
        "DaysOperated": {
          "type": "string"
        },
        "DepartureTime": {
          "type": "string"
        },
        "Destination": {
          "type": "integer",
          "format": "int32"
        },
        "Duration": {
          "type": "string"
        },
        "FlightNumber": {
          "type": "string"
        },
        "OperatingCarrier": {
          "type": "string"
        },
        "Origin": {
          "type": "integer",
          "format": "int32"
        },
        "ScheduleID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "version": {
      "type": "object",
      "properties": {
        "Version": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "idPathParameter": {
      "type": "integer",
      "format": "int64",
      "description": "The id of the item",
      "name": "id",
      "in": "path",
      "required": true
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "needs to add a description",
    "title": "miniplanes storage",
    "version": "1.0.0"
  },
  "host": "storage:33775",
  "paths": {
    "/airlines": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "airlines"
        ],
        "responses": {
          "200": {
            "description": "list of airlines",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/airline"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new airline. Duplicates are not allowed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "airlines"
        ],
        "operationId": "addAirline",
        "parameters": [
          {
            "description": "Airline\"",
            "name": "airline\"",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/airline"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/airline"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/airports": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "airports"
        ],
        "responses": {
          "200": {
            "description": "list of airports",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/airport"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Creates an Airport entry. Duplicates are not allowed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "airports"
        ],
        "operationId": "addAirport",
        "parameters": [
          {
            "description": "Airport",
            "name": "airport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/airport"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/airport"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/live": {
      "get": {
        "tags": [
          "liveness"
        ],
        "responses": {
          "200": {
            "description": "liveness probe"
          },
          "503": {
            "description": "if not alive",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "tags": [
          "readiness"
        ],
        "responses": {
          "200": {
            "description": "readiness probe"
          },
          "503": {
            "description": "if not ready",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/schedules": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "schedules"
        ],
        "responses": {
          "200": {
            "description": "list of schedules",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/schedule"
              }
            }
          },
          "400": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new schedule. Duplicates are not allowed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "schedules"
        ],
        "operationId": "addSchedule",
        "parameters": [
          {
            "description": "Schedule",
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/schedules/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "schedules"
        ],
        "operationId": "getSchedule",
        "responses": {
          "200": {
            "description": "list of schedules",
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          }
        }
      },
      "put": {
        "description": "Updates an existant Schedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "schedules"
        ],
        "operationId": "updateSchedule",
        "parameters": [
          {
            "description": "the schedule to update",
            "name": "schedule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Updated Succesfully",
            "schema": {
              "$ref": "#/definitions/schedule"
            }
          },
          "400": {
            "description": "invalid id"
          },
          "404": {
            "description": "schedule not found"
          }
        }
      },
      "delete": {
        "description": "Delete an existant schedules",
        "tags": [
          "schedules"
        ],
        "operationId": "deleteSchedule",
        "responses": {
          "204": {
            "description": "Deleted successfully"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Schedule not found"
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "description": "The id of the item",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/version": {
      "get": {
        "tags": [
          "version"
        ],
        "responses": {
          "200": {
            "description": "version",
            "schema": {
              "$ref": "#/definitions/version"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "airline": {
      "type": "object",
      "properties": {
        "Active": {
          "type": "string"
        },
        "AirlineID": {
          "type": "integer"
        },
        "Alias": {
          "type": "string"
        },
        "Callsign": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "IATA": {
          "type": "string"
        },
        "ICAO": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "airport": {
      "type": "object",
      "properties": {
        "AirportID": {
          "type": "integer",
          "format": "int32"
        },
        "Altitude": {
          "type": "number"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "DST": {
          "type": "string"
        },
        "IATA": {
          "type": "string"
        },
        "ICAO": {
          "type": "string"
        },
        "Latitude": {
          "type": "number"
        },
        "Longitude": {
          "type": "number"
        },
        "Name": {
          "type": "string"
        },
        "TZ": {
          "type": "string"
        },
        "timezone": {
          "type": "integer"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "schedule": {
      "type": "object",
      "required": [
        "ScheduleID",
        "Origin",
        "Destination",
        "FlightNumber",
        "OperatingCarrier",
        "DaysOperated",
        "DepartureTime"
      ],
      "properties": {
        "DaysOperated": {
          "type": "string"
        },
        "DepartureTime": {
          "type": "string"
        },
        "Destination": {
          "type": "integer",
          "format": "int32"
        },
        "Duration": {
          "type": "string"
        },
        "FlightNumber": {
          "type": "string"
        },
        "OperatingCarrier": {
          "type": "string"
        },
        "Origin": {
          "type": "integer",
          "format": "int32"
        },
        "ScheduleID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "version": {
      "type": "object",
      "properties": {
        "Version": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "idPathParameter": {
      "type": "integer",
      "format": "int64",
      "description": "The id of the item",
      "name": "id",
      "in": "path",
      "required": true
    }
  }
}`))
}
