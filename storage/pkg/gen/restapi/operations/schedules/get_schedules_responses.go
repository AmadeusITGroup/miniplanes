// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/amadeusitgroup/miniplanes/storage/pkg/gen/models"
)

// GetSchedulesOKCode is the HTTP code returned for type GetSchedulesOK
const GetSchedulesOKCode int = 200

/*GetSchedulesOK list of schedules

swagger:response getSchedulesOK
*/
type GetSchedulesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Schedule `json:"body,omitempty"`
}

// NewGetSchedulesOK creates GetSchedulesOK with default headers values
func NewGetSchedulesOK() *GetSchedulesOK {

	return &GetSchedulesOK{}
}

// WithPayload adds the payload to the get schedules o k response
func (o *GetSchedulesOK) WithPayload(payload []*models.Schedule) *GetSchedulesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get schedules o k response
func (o *GetSchedulesOK) SetPayload(payload []*models.Schedule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSchedulesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Schedule, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetSchedulesBadRequestCode is the HTTP code returned for type GetSchedulesBadRequest
const GetSchedulesBadRequestCode int = 400

/*GetSchedulesBadRequest generic error response

swagger:response getSchedulesBadRequest
*/
type GetSchedulesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSchedulesBadRequest creates GetSchedulesBadRequest with default headers values
func NewGetSchedulesBadRequest() *GetSchedulesBadRequest {

	return &GetSchedulesBadRequest{}
}

// WithPayload adds the payload to the get schedules bad request response
func (o *GetSchedulesBadRequest) WithPayload(payload *models.Error) *GetSchedulesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get schedules bad request response
func (o *GetSchedulesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSchedulesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSchedulesDefault generic error response

swagger:response getSchedulesDefault
*/
type GetSchedulesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSchedulesDefault creates GetSchedulesDefault with default headers values
func NewGetSchedulesDefault(code int) *GetSchedulesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSchedulesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get schedules default response
func (o *GetSchedulesDefault) WithStatusCode(code int) *GetSchedulesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get schedules default response
func (o *GetSchedulesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get schedules default response
func (o *GetSchedulesDefault) WithPayload(payload *models.Error) *GetSchedulesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get schedules default response
func (o *GetSchedulesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSchedulesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
