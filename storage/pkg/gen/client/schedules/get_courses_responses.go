// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/amadeusitgroup/miniapp/storage/pkg/gen/models"
)

// GetCoursesReader is a Reader for the GetCourses structure.
type GetCoursesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCoursesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCoursesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetCoursesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCoursesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCoursesOK creates a GetCoursesOK with default headers values
func NewGetCoursesOK() *GetCoursesOK {
	return &GetCoursesOK{}
}

/*GetCoursesOK handles this case with default header values.

list of courses (routes)
*/
type GetCoursesOK struct {
	Payload []*models.Course
}

func (o *GetCoursesOK) Error() string {
	return fmt.Sprintf("[GET /courses][%d] getCoursesOK  %+v", 200, o.Payload)
}

func (o *GetCoursesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoursesBadRequest creates a GetCoursesBadRequest with default headers values
func NewGetCoursesBadRequest() *GetCoursesBadRequest {
	return &GetCoursesBadRequest{}
}

/*GetCoursesBadRequest handles this case with default header values.

generic error response
*/
type GetCoursesBadRequest struct {
	Payload *models.Error
}

func (o *GetCoursesBadRequest) Error() string {
	return fmt.Sprintf("[GET /courses][%d] getCoursesBadRequest  %+v", 400, o.Payload)
}

func (o *GetCoursesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoursesDefault creates a GetCoursesDefault with default headers values
func NewGetCoursesDefault(code int) *GetCoursesDefault {
	return &GetCoursesDefault{
		_statusCode: code,
	}
}

/*GetCoursesDefault handles this case with default header values.

generic error response
*/
type GetCoursesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get courses default response
func (o *GetCoursesDefault) Code() int {
	return o._statusCode
}

func (o *GetCoursesDefault) Error() string {
	return fmt.Sprintf("[GET /courses][%d] GetCourses default  %+v", o._statusCode, o.Payload)
}

func (o *GetCoursesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
