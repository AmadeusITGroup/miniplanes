// Code generated by go-swagger; DO NOT EDIT.

package airlines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/amadeusitgroup/miniplanes/storage/pkg/gen/models"
)

// AddAirlineReader is a Reader for the AddAirline structure.
type AddAirlineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddAirlineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddAirlineCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewAddAirlineDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddAirlineCreated creates a AddAirlineCreated with default headers values
func NewAddAirlineCreated() *AddAirlineCreated {
	return &AddAirlineCreated{}
}

/*AddAirlineCreated handles this case with default header values.

Created
*/
type AddAirlineCreated struct {
	Payload *models.Airline
}

func (o *AddAirlineCreated) Error() string {
	return fmt.Sprintf("[POST /airlines][%d] addAirlineCreated  %+v", 201, o.Payload)
}

func (o *AddAirlineCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Airline)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddAirlineDefault creates a AddAirlineDefault with default headers values
func NewAddAirlineDefault(code int) *AddAirlineDefault {
	return &AddAirlineDefault{
		_statusCode: code,
	}
}

/*AddAirlineDefault handles this case with default header values.

unexpected error
*/
type AddAirlineDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the add airline default response
func (o *AddAirlineDefault) Code() int {
	return o._statusCode
}

func (o *AddAirlineDefault) Error() string {
	return fmt.Sprintf("[POST /airlines][%d] addAirline default  %+v", o._statusCode, o.Payload)
}

func (o *AddAirlineDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
