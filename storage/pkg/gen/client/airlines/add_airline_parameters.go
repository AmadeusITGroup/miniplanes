// Code generated by go-swagger; DO NOT EDIT.

package airlines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/amadeusitgroup/miniplanes/storage/pkg/gen/models"
)

// NewAddAirlineParams creates a new AddAirlineParams object
// with the default values initialized.
func NewAddAirlineParams() *AddAirlineParams {
	var ()
	return &AddAirlineParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddAirlineParamsWithTimeout creates a new AddAirlineParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddAirlineParamsWithTimeout(timeout time.Duration) *AddAirlineParams {
	var ()
	return &AddAirlineParams{

		timeout: timeout,
	}
}

// NewAddAirlineParamsWithContext creates a new AddAirlineParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddAirlineParamsWithContext(ctx context.Context) *AddAirlineParams {
	var ()
	return &AddAirlineParams{

		Context: ctx,
	}
}

// NewAddAirlineParamsWithHTTPClient creates a new AddAirlineParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddAirlineParamsWithHTTPClient(client *http.Client) *AddAirlineParams {
	var ()
	return &AddAirlineParams{
		HTTPClient: client,
	}
}

/*AddAirlineParams contains all the parameters to send to the API endpoint
for the add airline operation typically these are written to a http.Request
*/
type AddAirlineParams struct {

	/*Airline
	  Airline"

	*/
	Airline *models.Airline

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add airline params
func (o *AddAirlineParams) WithTimeout(timeout time.Duration) *AddAirlineParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add airline params
func (o *AddAirlineParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add airline params
func (o *AddAirlineParams) WithContext(ctx context.Context) *AddAirlineParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add airline params
func (o *AddAirlineParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add airline params
func (o *AddAirlineParams) WithHTTPClient(client *http.Client) *AddAirlineParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add airline params
func (o *AddAirlineParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAirline adds the airline to the add airline params
func (o *AddAirlineParams) WithAirline(airline *models.Airline) *AddAirlineParams {
	o.SetAirline(airline)
	return o
}

// SetAirline adds the airline to the add airline params
func (o *AddAirlineParams) SetAirline(airline *models.Airline) {
	o.Airline = airline
}

// WriteToRequest writes these params to a swagger request
func (o *AddAirlineParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Airline != nil {
		if err := r.SetBodyParam(o.Airline); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
