// Code generated by go-swagger; DO NOT EDIT.

package airlines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/amadeusitgroup/miniplanes/storage/pkg/gen/models"
)

// GetAirlinesReader is a Reader for the GetAirlines structure.
type GetAirlinesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAirlinesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAirlinesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAirlinesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetAirlinesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAirlinesOK creates a GetAirlinesOK with default headers values
func NewGetAirlinesOK() *GetAirlinesOK {
	return &GetAirlinesOK{}
}

/*GetAirlinesOK handles this case with default header values.

list of airlines
*/
type GetAirlinesOK struct {
	Payload []*models.Airline
}

func (o *GetAirlinesOK) Error() string {
	return fmt.Sprintf("[GET /airlines][%d] getAirlinesOK  %+v", 200, o.Payload)
}

func (o *GetAirlinesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinesBadRequest creates a GetAirlinesBadRequest with default headers values
func NewGetAirlinesBadRequest() *GetAirlinesBadRequest {
	return &GetAirlinesBadRequest{}
}

/*GetAirlinesBadRequest handles this case with default header values.

generic error response
*/
type GetAirlinesBadRequest struct {
	Payload *models.Error
}

func (o *GetAirlinesBadRequest) Error() string {
	return fmt.Sprintf("[GET /airlines][%d] getAirlinesBadRequest  %+v", 400, o.Payload)
}

func (o *GetAirlinesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAirlinesDefault creates a GetAirlinesDefault with default headers values
func NewGetAirlinesDefault(code int) *GetAirlinesDefault {
	return &GetAirlinesDefault{
		_statusCode: code,
	}
}

/*GetAirlinesDefault handles this case with default header values.

generic error response
*/
type GetAirlinesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get airlines default response
func (o *GetAirlinesDefault) Code() int {
	return o._statusCode
}

func (o *GetAirlinesDefault) Error() string {
	return fmt.Sprintf("[GET /airlines][%d] GetAirlines default  %+v", o._statusCode, o.Payload)
}

func (o *GetAirlinesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
